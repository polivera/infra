version: '3.8'

services:
  immich-server:
    image: ghcr.io/immich-app/immich-server:v1.132.3
    init: true
    networks:
      - public_network
      - redis_network
      - immich_internal
    environment:
      # Postgres
      DB_DATABASE_NAME: ${POSTGRES_DB}
      DB_USERNAME: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOSTNAME: immich-database
      # Redis
      REDIS_HOSTNAME: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      # Add these for GPU transcoding
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      ENABLE_HARDWARE_ACCELERATION: "true"
      FFMPEG_HARDWARE_ACCELERATION: "true"
    volumes:
      - immich_data:/usr/src/app/upload
      - /etc/localtime:/etc/localtime:ro
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        failure_action: rollback
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    depends_on:
      - immich-database

  immich-machine-learning:
    image: ghcr.io/immich-app/immich-machine-learning:v1.132.3
    init: true
    networks:
      - public_network
      - immich_internal
    volumes:
      - immich_model_cache:/cache
    environment:
      NVIDIA_VISIBLE_DEVICES: all
      NVIDIA_DRIVER_CAPABILITIES: all
      ENABLE_HARDWARE_ACCELERATION: "true"
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.labels.gpu == true
      restart_policy:
        condition: any
      update_config:
        failure_action: rollback
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [ gpu ]
    depends_on:
      - immich-database

  immich-database:
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    networks:
      - immich_internal
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      - immich_database:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    deploy:
      replicas: 1
      restart_policy:
        condition: any
      update_config:
        failure_action: rollback
        order: start-first

volumes:
  immich_data:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.0.11,rw,soft,nolock
      device: ":/mnt/Main/media/photos"
  immich_model_cache:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.0.11,rw,soft,nolock
      device: ":/mnt/Main/immich/cache"
  immich_database:
    driver: local
    driver_opts:
      type: nfs
      o: addr=192.168.0.11,rw,soft,nolock
      device: ":/mnt/Databases/immich"

networks:
  public_network:
    external: true
  redis_network:
    external: true
  immich_internal:
    driver: overlay
    internal: true
